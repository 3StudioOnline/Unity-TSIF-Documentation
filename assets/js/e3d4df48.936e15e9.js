"use strict";(self.webpackChunkunity_tsif_documentation=self.webpackChunkunity_tsif_documentation||[]).push([[946],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>d});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=p(t),d=r,g=f["".concat(s,".").concat(d)]||f[d]||u[d]||o;return t?i.createElement(g,a(a({ref:n},l),{},{components:t})):i.createElement(g,a({ref:n},l))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=f;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var p=2;p<o;p++)a[p]=t[p];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4887:(e,n,t)=>{t.d(n,{AA:()=>a,V3:()=>c,qh:()=>o});t(7462),t(7294);var i=t(3905);function r(e,n,t,r){return(0,i.kt)("div",{style:{backgroundColor:r,color:t,border:"1px "+t+" solid",borderRadius:"5px",padding:".1rem .4rem"}},n)}const o=e=>{let{children:n}=e;return r(0,"Released","#afa","#181")},a=e=>{let{children:n}=e;return r(0,"In Progress","#ffa","#882")},c=e=>{let{children:n}=e;return r(0,"Planned","#aff","#288")}},4623:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var i=t(7462),r=(t(7294),t(3905));t(4887);const o={sidebar_position:3,title:"IPFS Pinning Service Config"},a=void 0,c={unversionedId:"quick-start/ipfs-pinning-service-config",id:"version-1.0.0/quick-start/ipfs-pinning-service-config",title:"IPFS Pinning Service Config",description:"Get IPFS Pinning Service Config Function",source:"@site/versioned_docs/version-1.0.0/quick-start/ipfs-pinning-service-config.mdx",sourceDirName:"quick-start",slug:"/quick-start/ipfs-pinning-service-config",permalink:"/Unity-TSIF-Documentation/docs/quick-start/ipfs-pinning-service-config",draft:!1,editUrl:"https://github.com/3StudioOnline/Unity-TSIF-Documentation/edit/master/versioned_docs/version-1.0.0/quick-start/ipfs-pinning-service-config.mdx",tags:[],version:"1.0.0",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"IPFS Pinning Service Config"},sidebar:"tutorialSidebar",previous:{title:"IPFS Gateway Config",permalink:"/Unity-TSIF-Documentation/docs/quick-start/ipfs-gateway-config"},next:{title:"Get Stat Data",permalink:"/Unity-TSIF-Documentation/docs/quick-start/stat-data"}},s={},p=[{value:"Get IPFS Pinning Service Config Function",id:"get-ipfs-pinning-service-config-function",level:2}],l={toc:p};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,i.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"get-ipfs-pinning-service-config-function"},"Get IPFS Pinning Service Config Function"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"Ipfs.GetIpfsPinningServiceConfig(IpfsPinningService ipfsPinningService)\n")),(0,r.kt)("p",null,"This is a helper function that holds default information for commonly used ",(0,r.kt)("inlineCode",{parentName:"p"},"IPFS"),"\npinning services."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Additional pinning services will be added in future updates if needed.")),(0,r.kt)("p",null,"This function returns an ",(0,r.kt)("inlineCode",{parentName:"p"},"IpfsPinningServiceConfig")," object that contains:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Url"),": The pinning service API endpoint URL."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Name"),": The name of the pinning service API endpoint provider.")))}u.isMDXComponent=!0}}]);