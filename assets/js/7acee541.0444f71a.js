"use strict";(self.webpackChunkunity_tsif_documentation=self.webpackChunkunity_tsif_documentation||[]).push([[115],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),g=o,f=d["".concat(u,".").concat(g)]||d[g]||p[g]||i;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4887:(e,t,n)=>{n.d(t,{AA:()=>a,V3:()=>l,qh:()=>i});n(7462),n(7294);var r=n(3905);function o(e,t,n,o){return(0,r.kt)("div",{style:{backgroundColor:o,color:n,border:"1px "+n+" solid",borderRadius:"5px",padding:".1rem .4rem"}},t)}const i=e=>{let{children:t}=e;return o(0,"Released","#afa","#181")},a=e=>{let{children:t}=e;return o(0,"In Progress","#ffa","#882")},l=e=>{let{children:t}=e;return o(0,"Planned","#aff","#288")}},3052:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));n(4887);const i={sidebar_position:1,title:"Debugging"},a=void 0,l={unversionedId:"quick-start/Debugging",id:"version-1.0.0/quick-start/Debugging",title:"Debugging",description:"Debug IPFS Network Communication",source:"@site/versioned_docs/version-1.0.0/quick-start/Debugging.mdx",sourceDirName:"quick-start",slug:"/quick-start/Debugging",permalink:"/Unity-TSIF-Documentation/docs/quick-start/Debugging",draft:!1,editUrl:"https://github.com/3StudioOnline/Unity-TSIF-Documentation/edit/master/versioned_docs/version-1.0.0/quick-start/Debugging.mdx",tags:[],version:"1.0.0",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Debugging"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/Unity-TSIF-Documentation/docs/getting-started/introduction"},next:{title:"IPFS Gateway Config",permalink:"/Unity-TSIF-Documentation/docs/quick-start/ipfs-gateway-config"}},u={},s=[{value:"Debug IPFS Network Communication",id:"debug-ipfs-network-communication",level:2}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"debug-ipfs-network-communication"},"Debug IPFS Network Communication"),(0,o.kt)("p",null,"Sometimes it is helpful being able to take a look at the data sent and received through Http requests to IPFS network.\nThis debugging feature can be enabled by calling:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"Ipfs.SetDebugLogEnabled(\n    bool enabled,\n    Ipfs.DebugMode debugMode)\n")),(0,o.kt)("p",null,"You can select what is the data you want to be printed in the log when sending requests to IPFS, such as:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Ipfs.DebugMode.DownloadFileOrGetData")," enables debug logging for IPFS Download File or Get Data functions."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Ipfs.DebugMode.UploadFileOrData")," enables debug logging for IPFS Upload File or Data functions.")),(0,o.kt)("p",null,"This will help you visualize the data in the ",(0,o.kt)("em",{parentName:"p"},"requests")," sent to ",(0,o.kt)("inlineCode",{parentName:"p"},"IPFS")," network and the ",(0,o.kt)("em",{parentName:"p"},"responses")," that you will get\nback from it. Also, all errors will be logged if something wrong happened during the process."))}p.isMDXComponent=!0}}]);