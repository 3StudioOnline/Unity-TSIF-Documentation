"use strict";(self.webpackChunkunity_tsif_documentation=self.webpackChunkunity_tsif_documentation||[]).push([[780],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=l(n),f=r,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||s;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4887:(e,t,n)=>{n.d(t,{AA:()=>o,V3:()=>i,qh:()=>s});n(7462),n(7294);var a=n(3905);function r(e,t,n,r){return(0,a.kt)("div",{style:{backgroundColor:r,color:n,border:"1px "+n+" solid",borderRadius:"5px",padding:".1rem .4rem"}},t)}const s=e=>{let{children:t}=e;return r(0,"Released","#afa","#181")},o=e=>{let{children:t}=e;return r(0,"In Progress","#ffa","#882")},i=e=>{let{children:t}=e;return r(0,"Planned","#aff","#288")}},7782:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));n(4887);const s={sidebar_position:3,title:"Get Data As Image"},o=void 0,i={unversionedId:"ipfs-functions/get-data-as-image",id:"version-1.0.0/ipfs-functions/get-data-as-image",title:"Get Data As Image",description:"Get Data As Image Function (Task)",source:"@site/versioned_docs/version-1.0.0/ipfs-functions/get-data-as-image.mdx",sourceDirName:"ipfs-functions",slug:"/ipfs-functions/get-data-as-image",permalink:"/Unity-TSIF-Documentation/docs/ipfs-functions/get-data-as-image",draft:!1,editUrl:"https://github.com/3StudioOnline/Unity-TSIF-Documentation/edit/master/versioned_docs/version-1.0.0/ipfs-functions/get-data-as-image.mdx",tags:[],version:"1.0.0",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Get Data As Image"},sidebar:"tutorialSidebar",previous:{title:"Get Data As String",permalink:"/Unity-TSIF-Documentation/docs/ipfs-functions/get-data-as-string"},next:{title:"Download File",permalink:"/Unity-TSIF-Documentation/docs/ipfs-functions/download-file"}},p={},l=[{value:"Get Data As Image Function (Task)",id:"get-data-as-image-function-task",level:2},{value:"Get Data As Image Function (Delegate)",id:"get-data-as-image-function-delegate",level:2}],c={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"get-data-as-image-function-task"},"Get Data As Image Function (Task)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"void IPFS.IpfsFunctionLibrary.GetDataAsImage(\n    IpfsHttpGatewayConfig ipfsHttpGatewayConfig,\n    IpfsAddress ipfsAddress)\n")),(0,r.kt)("p",null,"This function gets data as image from the ",(0,r.kt)("em",{parentName:"p"},"IPFS")," network for the specified CID/Path. This function requires\ninputs as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ipfsHttpGatewayConfig"),": Holds the URL of the gateway to send the request to."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ipfsAddress"),": Holds the CID and path of the file on ",(0,r.kt)("em",{parentName:"li"},"IPFS")," network.")),(0,r.kt)("p",null,"The returned ",(0,r.kt)("em",{parentName:"p"},"Response")," is a ",(0,r.kt)("inlineCode",{parentName:"p"},"Task")," that holds data such as headers, status code, and body of the response of the HTTP\nrequest."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"Task<(bool success, string errorMessage, HttpResponse response, Texture2D texture)>\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If ",(0,r.kt)("inlineCode",{parentName:"p"},"success")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," that only means that the response from the ",(0,r.kt)("em",{parentName:"p"},"IPFS")," network was successful only.")),(0,r.kt)("p",null,"If successful, returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"texture")," as ",(0,r.kt)("em",{parentName:"p"},"Texture 2D")," object reference."),(0,r.kt)("h2",{id:"get-data-as-image-function-delegate"},"Get Data As Image Function (Delegate)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"void IPFS.IpfsFunctionLibrary.GetDataAsImage(\n    IpfsHttpGatewayConfig ipfsHttpGatewayConfig,\n    IpfsAddress ipfsAddress,\n    IpfsGetDataAsImageDelegate responseDelegate)\n")),(0,r.kt)("p",null,"This is a wrapper function for the async implementation. It exists to provide\nthe same functionality but using a delegate for handling responses."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"delegate void IpfsGetDataAsImageDelegate(\n    bool success,\n    string errorMessage,\n    HttpResponse response,\n    Texture2D texture)\n")))}u.isMDXComponent=!0}}]);